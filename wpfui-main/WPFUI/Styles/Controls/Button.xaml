<!--
    This Source Code Form is subject to the terms of the MIT License.
    If a copy of the MIT was not distributed with this file, You can obtain one at https://opensource.org/licenses/MIT.
    Copyright (C) Leszek Pomianowski and WPF UI Contributors.
    All Rights Reserved.
-->

<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:WPFUI.Controls">

    <!--
        BorderBrush is used as a hover color
    -->
    <Style TargetType="{x:Type Button}">
        <Setter Property="Padding" Value="30,6" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="FontWeight" Value="Medium" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}" />
        <Setter Property="Background" Value="{DynamicResource SystemAccentBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource SystemAccentBrush}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="Border"
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{DynamicResource ControlElevationBorderBrush}"
                        BorderThickness="1"
                        CornerRadius="4">
                        <ContentPresenter
                            x:Name="Presenter"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{Binding Path=BorderBrush, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="{DynamicResource ControlFillColorDisabled}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Presenter" Property="TextElement.Foreground">
                                <Setter.Value>
                                    <SolidColorBrush Color="{DynamicResource TextFillColorTertiary}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type controls:Button}">
        <Setter Property="Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}" />
        <Setter Property="Background" Value="{DynamicResource SystemAccentBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource SystemAccentBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ControlElevationBorderBrush}" />
        <Setter Property="HoverBackground">
            <Setter.Value>
                <SolidColorBrush Opacity="0.6" Color="{DynamicResource SystemAccentColorLight2}" />
            </Setter.Value>
        </Setter>
        <Setter Property="HoverBorderBrush" Value="{DynamicResource ControlElevationBorderBrush}" />
        <Setter Property="Padding" Value="30,6" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="FontWeight" Value="Medium" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:Button}">
                    <Border
                        x:Name="Border"
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="4">
                        <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <controls:Icon
                                x:Name="ButtonIcon"
                                Grid.Column="0"
                                Margin="0,0,12,0"
                                Filled="{TemplateBinding IconFilled}"
                                FontSize="{TemplateBinding FontSize}"
                                FontWeight="{TemplateBinding FontWeight}"
                                Foreground="{TemplateBinding Foreground}"
                                Glyph="{TemplateBinding Icon}" />
                            <ContentPresenter
                                x:Name="Presenter"
                                Grid.Column="1"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Icon" Value="Empty">
                            <Setter TargetName="ButtonIcon" Property="Margin" Value="0" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Opacity" Value="0.8" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{Binding HoverBackground, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{Binding HoverBorderBrush, RelativeSource={RelativeSource TemplatedParent}}" />
                            <!--
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="(Border.Opacity)"
                                            From="1.0"
                                            To="0.0"
                                            Duration="0:0:0.16" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="HoverBorder"
                                            Storyboard.TargetProperty="(Border.Opacity)"
                                            From="0.0"
                                            To="1.0"
                                            Duration="0:0:0.16" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="(Border.Opacity)"
                                            From="0.0"
                                            To="1.0"
                                            Duration="0:0:0.16" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="HoverBorder"
                                            Storyboard.TargetProperty="(Border.Opacity)"
                                            From="1.0"
                                            To="0.0"
                                            Duration="0:0:0.16" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            -->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Appearance" Value="Transparent">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="HoverBackground" Value="Transparent" />
            </Trigger>
            <Trigger Property="Appearance" Value="Dark">
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="#2e2e2e" />
                    </Setter.Value>
                </Setter>
                <Setter Property="HoverBackground">
                    <Setter.Value>
                        <SolidColorBrush Color="#1e1e1e" />
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="Appearance" Value="Light">
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="#f3f3f3" />
                    </Setter.Value>
                </Setter>
                <Setter Property="HoverBackground">
                    <Setter.Value>
                        <SolidColorBrush Color="#b3b3b3" />
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="Appearance" Value="Secondary">
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource ControlFillColorDefault}" />
                    </Setter.Value>
                </Setter>
                <Setter Property="HoverBackground">
                    <Setter.Value>
                        <SolidColorBrush Opacity="0.8" Color="{DynamicResource ControlFillColorDefault}" />
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="Appearance" Value="Danger">
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource PaletteRedColor}" />
                    </Setter.Value>
                </Setter>
                <Setter Property="HoverBackground">
                    <Setter.Value>
                        <SolidColorBrush Opacity="0.8" Color="{DynamicResource PaletteRedColor}" />
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="Appearance" Value="Success">
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource PaletteGreenColor}" />
                    </Setter.Value>
                </Setter>
                <Setter Property="HoverBackground">
                    <Setter.Value>
                        <SolidColorBrush Opacity="0.8" Color="{DynamicResource PaletteGreenColor}" />
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="Appearance" Value="Caution">
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource PaletteOrangeColor}" />
                    </Setter.Value>
                </Setter>
                <Setter Property="HoverBackground">
                    <Setter.Value>
                        <SolidColorBrush Opacity="0.8" Color="{DynamicResource PaletteOrangeColor}" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>


    <LinearGradientBrush x:Key="Button.Static.BorderAccent" StartPoint="1,1" EndPoint="1,0">
        <GradientStop Offset="0.008" Color="#FF013870" />
        <GradientStop Offset="0.042" Color="#FF136CBE" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="Button.MouseOver.BorderAccent" StartPoint="1,1" EndPoint="1,0">
        <GradientStop Offset="0.008" Color="#FF013870" />
        <GradientStop Offset="0.042" Color="#FF136CBE" />
    </LinearGradientBrush>

    <Style x:Key="WPFUIButtonAccent" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource ButtonAccentBackgroundBrushes}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ButtonAccentBackgroundBrushes}" />
        <Setter Property="Foreground" Value="{DynamicResource ButtonAccentTextRest}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="4"
                        SnapsToDevicePixels="true">
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="False"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ButtonAccentHover}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource Button.MouseOver.BorderAccent}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ButtonPressedAccent}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource ButtonPressedAccent}" />
                            <Setter Property="Foreground" Value="{DynamicResource ButtonTextAccentPressedSolid}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ButtonIsEnabledAccent}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="Transparent" />
                            <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{DynamicResource ButtonAccentTextDis}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="FocusVisualStandard">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle
                        Margin="2"
                        SnapsToDevicePixels="true"
                        Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                        StrokeDashArray="1 2"
                        StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <LinearGradientBrush x:Key="Button.Static.BorderStandard" StartPoint="1,1" EndPoint="1,0">
        <GradientStop Offset="0.008" Color="#d2d2d2" />
        <GradientStop Offset="0.042" Color="#ececec" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="Button.MouseOver.BorderStandard" StartPoint="1,1" EndPoint="1,0">
        <GradientStop Offset="0.008" Color="#d2d2d2" />
        <GradientStop Offset="0.042" Color="#ececec" />
    </LinearGradientBrush>

    <Style x:Key="WPFUIButtonStandard" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisualStandard}" />
        <Setter Property="Background" Value="{DynamicResource ControlFillColorDefaultBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ControlElevationBorderBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource ButtonStandardTextRest}" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="4"
                        SnapsToDevicePixels="true">
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="False"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ControlFillColorDefaultBrush}" />
                            <Setter TargetName="border" Property="Opacity" Value="0.8" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ControlFillColorDefaultBrush}" />
                            <Setter TargetName="border" Property="Opacity" Value="0.6" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ControlFillColorDefaultBrush}" />
                            <Setter TargetName="border" Property="Opacity" Value="0.7" />
                            <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{DynamicResource ButtonStandardTextDis}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>